# https://c9.io/creationix/moonslice-luv/workspace/luv/libuv/CMakeLists.txt

include_directories(deps/libuv/src deps/libuv/include deps/libuv/include/uv-private)

set(LIBUV_INCLUDE_DIR deps/libuv/include)

# Common source files
set(LIBUV_COMMON_SOURCE_FILES
  deps/libuv/include/uv.h
  deps/libuv/include/tree.h
  deps/libuv/include/uv-errno.h
  deps/libuv/include/uv-version.h
  deps/libuv/src/fs-poll.c
  deps/libuv/src/heap-inl.h
  deps/libuv/src/inet.c
  deps/libuv/src/queue.h
  deps/libuv/src/uv-common.c
  deps/libuv/src/uv-common.h
  deps/libuv/src/version.c)

if(MSVC)
  # Run on windows >= XP SP2
  add_definitions(-D_WIN32_WINNT=0x0502 -D_GNU_SOURCE) #-D_WIN32_WINNT=0x0600
  set(LIBUV_DEPENDENCIES advapi32.lib iphlpapi.lib psapi.lib shell32.lib ws2_32.lib)

  # Windows source files
  set(LIBUV_SOURCE_FILES ${LIBUV_COMMON_SOURCE_FILES}
    deps/libuv/include/uv-win.h
    deps/libuv/src/win/async.c
    deps/libuv/src/win/atomicops-inl.h
    deps/libuv/src/win/core.c
    deps/libuv/src/win/dl.c
    deps/libuv/src/win/error.c
    deps/libuv/src/win/fs.c
    deps/libuv/src/win/fs-event.c
    deps/libuv/src/win/getaddrinfo.c
    deps/libuv/src/win/handle.c
    deps/libuv/src/win/handle-inl.h
    deps/libuv/src/win/internal.h
    deps/libuv/src/win/loop-watcher.c
    deps/libuv/src/win/pipe.c
    deps/libuv/src/win/thread.c
    deps/libuv/src/win/poll.c
    deps/libuv/src/win/process.c
    deps/libuv/src/win/process-stdio.c
    deps/libuv/src/win/req.c
    deps/libuv/src/win/req-inl.h
    deps/libuv/src/win/signal.c
    deps/libuv/src/win/stream.c
    deps/libuv/src/win/stream-inl.h
    deps/libuv/src/win/tcp.c
    deps/libuv/src/win/tty.c
    deps/libuv/src/win/threadpool.c
    deps/libuv/src/win/timer.c
    deps/libuv/src/win/udp.c
    deps/libuv/src/win/util.c
    deps/libuv/src/win/winapi.c
    deps/libuv/src/win/winapi.h
    deps/libuv/src/win/winsock.c
    deps/libuv/src/win/winsock.h)

else()
  add_definitions(-D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -D_GNU_SOURCE)
  set(LIBUV_DEPENDENCIES "-lm")

  # Posix source files
  set(LIBUV_POSIX_SOURCE_FILES
    deps/libuv/include/uv-unix.h
    deps/libuv/include/uv-linux.h
    deps/libuv/include/uv-sunos.h
    deps/libuv/include/uv-darwin.h
    deps/libuv/include/uv-bsd.h
    deps/libuv/src/unix/async.c
    deps/libuv/src/unix/atomic-ops.h
    deps/libuv/src/unix/core.c
    deps/libuv/src/unix/dl.c
    deps/libuv/src/unix/fs.c
    deps/libuv/src/unix/getaddrinfo.c
    deps/libuv/src/unix/internal.h
    deps/libuv/src/unix/loop.c
    deps/libuv/src/unix/loop-watcher.c
    deps/libuv/src/unix/pipe.c
    deps/libuv/src/unix/poll.c
    deps/libuv/src/unix/process.c
    deps/libuv/src/unix/signal.c
    deps/libuv/src/unix/spinlock.h
    deps/libuv/src/unix/stream.c
    deps/libuv/src/unix/tcp.c
    deps/libuv/src/unix/thread.c
    deps/libuv/src/unix/threadpool.c
    deps/libuv/src/unix/timer.c
    deps/libuv/src/unix/tty.c
    deps/libuv/src/unix/udp.c)

  # For linux mac and android; see uv.gyp
  set(LIBUV_PROCTILE_SOURCE_FILE deps/libuv/src/unix/proctitle.c)

  if(APPLE)
    add_definitions(-D_DARWIN_USE_64_BIT_INODE=1)
    set(LIBUV_SOURCE_FILES
      ${LIBUV_COMMON_SOURCE_FILES}
      ${LIBUV_POSIX_SOURCE_FILES}
      ${LIBUV_PROCTILE_SOURCE_FILE}
      deps/libuv/src/unix/darwin.c
      deps/libuv/src/unix/fsevents.c
      deps/libuv/src/unix/darwin-proctitle.c
      deps/libuv/src/unix/kqueue.c)


  elseif(${CMAKE_SYSTEM_NAME} STREQUAL "Linux")
    set(LIBUV_DEPENDENCIES "-ldl -lrt ${LIBUV_DEPENDENCIES}")
    set(LIBUV_SOURCE_FILES
      ${LIBUV_COMMON_SOURCE_FILES}
      ${LIBUV_POSIX_SOURCE_FILES}
      ${LIBUV_PROCTILE_SOURCE_FILE}
      deps/libuv/src/unix/linux-core.c
      deps/libuv/src/unix/linux-inotify.c
      deps/libuv/src/unix/linux-syscalls.c
      deps/libuv/src/unix/linux-syscalls.h)

  elseif(${CMAKE_SYSTEM_NAME} STREQUAL "Android")
    set(LIBUV_DEPENDENCIES "-ldl ${LIBUV_DEPENDENCIES}")
    set(LIBUV_SOURCE_FILES
      ${LIBUV_COMMON_SOURCE_FILES}
      ${LIBUV_POSIX_SOURCE_FILES}
      ${LIBUV_PROCTILE_SOURCE_FILE}
      deps/libuv/src/unix/linux-core.c
      deps/libuv/src/unix/linux-inotify.c
      deps/libuv/src/unix/linux-syscalls.c
      deps/libuv/src/unix/linux-syscalls.h
      deps/libuv/src/unix/pthread-fixes.c)
  #else()
  #  message(FATAL_ERROR
  #    "Cannot build libuv on this system: ${CMAKE_SYSTEM_NAME}")
  endif()

  # TODO: Solaris, FreeBSD and others; see uv.gyp

endif()

add_library(uv STATIC ${LIBUV_SOURCE_FILES})

